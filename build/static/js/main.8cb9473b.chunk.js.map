{"version":3,"sources":["firebase-config.js","styles/signup.js","components/common/userForm.jsx","components/signup.jsx","styles/login.js","components/login.jsx","styles/inbox.js","components/chatOverview.jsx","components/inbox.jsx","styles/dashboard.js","styles/chatView.js","components/chatView.jsx","styles/chatTextBox.js","components/chatTextBox.jsx","styles/newChat.js","components/newChat.jsx","components/dashboard.jsx","serviceWorker.js","index.js"],"names":["require","config","module","exports","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","styles","theme","main","width","display","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","hasAccountHeader","logInLink","textDecoration","color","fontWeight","errorText","textAlign","UserForm","formComponensts","submitButtonName","onChange","onSubmit","styleClass","e","className","map","component","FormControl","key","id","required","fullWidth","margin","InputLabel","htmlFor","placeholder","Input","autoComplete","type","stateVal","autoFocus","Button","variant","firebase","Signup","handleOnSubmit","a","preventDefault","isFormValid","auth","createUserWithEmailAndPassword","state","email","password","authRes","userObj","user","firestore","collection","doc","set","props","history","push","console","log","setState","signupError","message","handleOnChange","val","target","value","passwordConfirmation","classes","this","CssBaseline","Paper","Typography","components","to","Component","withStyles","Login","signInWithEmailAndPassword","loginError","onAuthStateChanged","_usr","root","backgroundColor","palette","background","height","position","top","left","boxShadow","listItem","cursor","unreadMessage","fontSize","right","ChatOverview","chat","index","selectedChatIndex","selectChatFn","Fragment","ListItem","onClick","selected","ListItemAvatar","Avatar","alt","users","filter","split","toUpperCase","ListItemText","primary","secondary","messages","length","substring","receiverHasRead","sender","ListItemIcon","Divider","Inbox","dashboardState","chats","List","signOutBtn","newChatBtn","bottom","header","textHeader","boxSizing","content","overflow","overflowY","paddingBottom","userSent","float","clear","wordWrap","minWidth","maxWidth","borderRadius","friendSent","chatHeader","chatUser","avatar","backBtn","backIcon","ChatView","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","componentDidMount","getMessageClass","senderEmail","backBtnClick","size","msg","PureComponent","sendBtn","chatTextBoxContainer","chatTextBox","ChatTextBox","userClickedInput","buildDocKey","friend","sort","join","userTyping","keyCode","submitMessage","chatText","messageValid","txt","replace","docKey","update","FieldValue","arrayUnion","timeStamp","Date","now","TextField","onKeyUp","onFocus","React","input","NewChat","usersExists","newChatrror","chatExists","goToChat","createChat","currentUser","chatIndex","findIndex","selectChatClicked","dockKey","get","exists","userSnapshot","docs","data","includes","Dashboard","getChats","where","onSnapshot","res","signOut","newChatBtnClicked","newChatFormVisible","callback","Fab","newChatBtnFn","aria-label","Boolean","window","location","hostname","match","initializeApp","routing","path","from","exact","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8cb9473b.chunk.js","sourcesContent":["require(\"dotenv\").config();\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: \"chat-app-878e3.firebaseapp.com\",\n  databaseURL: \"https://chat-app-878e3.firebaseio.com\",\n  projectId: \"chat-app-878e3\",\n  storageBucket: \"chat-app-878e3.appspot.com\",\n  messagingSenderId: \"75550798120\",\n  appId: \"1:75550798120:web:3b7aa0a14eb68fb766201d\",\n  measurementId: \"G-X3LSYNRQJ0\",\n};\n\nmodule.exports.config = config;\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px \n    ${theme.spacing(3)}px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(),\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    marginTop: theme.spacing(2),\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction UserForm({\n  formComponensts,\n  submitButtonName,\n  onChange,\n  onSubmit,\n  styleClass,\n}) {\n  return (\n    <form onSubmit={(e) => onSubmit(e)} className={styleClass.form}>\n      {formComponensts.map((component) => (\n        <FormControl key={component.id} required fullWidth margin=\"normal\">\n          <InputLabel htmlFor={component.id}>{component.placeholder}</InputLabel>\n          <Input\n            autoComplete={component.type}\n            type={component.type}\n            onChange={(e) => onChange(component.stateVal, e)}\n            autoFocus={component.autoFocus}\n            id={component.id}\n          ></Input>\n        </FormControl>\n      ))}\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={styleClass.submit}\n      >\n        {submitButtonName}\n      </Button>\n    </form>\n  );\n}\n\nexport default UserForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../styles/signup\";\nimport UserForm from \"./common/userForm\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nconst firebase = require(\"firebase\");\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: \"\",\n    };\n  }\n\n  handleOnSubmit = async (e) => {\n    e.preventDefault();\n    if (!this.isFormValid()) return;\n    try {\n      const authRes = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password);\n      const userObj = { email: authRes.user.email };\n      await firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(this.state.email)\n        .set(userObj);\n      this.props.history.push(\"/dashboard\");\n    } catch (ex) {\n      console.log(ex);\n      this.setState({ signupError: ex.message });\n    }\n  };\n\n  handleOnChange = (type, e) => {\n    const val = e.target.value;\n    this.setState({ [type]: val });\n  };\n\n  isFormValid = () => {\n    const { password, passwordConfirmation } = this.state;\n    if (password && passwordConfirmation && password !== passwordConfirmation) {\n      this.setState({ signupError: \"Passwords do not match!\" });\n      return false;\n    } else {\n      this.setState({ signupError: \"\" });\n      return true;\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const formComponents = [\n      {\n        id: \"sigup-email-input\",\n        placeholder: \"Enter Your Email\",\n        type: \"email\",\n        stateVal: \"email\",\n        autoFocus: true,\n      },\n      {\n        id: \"sigup-password-input\",\n        placeholder: \"Enter Your Password\",\n        type: \"password\",\n        stateVal: \"password\",\n      },\n      {\n        id: \"sigup-password-confirm-input\",\n        placeholder: \"Enter Your Password\",\n        type: \"password\",\n        stateVal: \"passwordConfirmation\",\n      },\n    ];\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography components=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <UserForm\n            formComponensts={formComponents}\n            onChange={this.handleOnChange}\n            onSubmit={this.handleOnSubmit}\n            submitButtonName=\"Submit\"\n            styleClass={classes}\n          />\n          {this.state.signupError ? (\n            <Typography\n              components=\"h1\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.signupError}\n            </Typography>\n          ) : null}\n          <Link className={classes.logInLink} to=\"/login\">\n            Already have an account?\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Signup);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px \n    ${theme.spacing(3)}px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(),\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    marginTop: theme.spacing(2),\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserForm from \"./common/userForm\";\nimport styles from \"../styles/login\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nconst firebase = require(\"firebase\");\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      loginError: \"\",\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if (_usr) this.props.history.push(\"/dashboard\");\n    });\n  }\n\n  handleOnSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password);\n      this.props.history.push(\"/dashboard\");\n    } catch (ex) {\n      console.log(ex);\n      this.setState({ loginError: ex.message });\n    }\n  };\n\n  handleOnChange = (type, e) => {\n    const val = e.target.value;\n    this.setState({ [type]: val });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const formComponents = [\n      {\n        id: \"login-email-input\",\n        placeholder: \"Enter Your Email\",\n        type: \"email\",\n        stateVal: \"email\",\n        autoFocus: true,\n      },\n      {\n        id: \"login-password-input\",\n        placeholder: \"Enter Your Password\",\n        type: \"password\",\n        stateVal: \"password\",\n      },\n    ];\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography components=\"h1\" variant=\"h5\">\n            Login\n          </Typography>\n          <UserForm\n            formComponensts={formComponents}\n            onChange={this.handleOnChange}\n            onSubmit={this.handleOnSubmit}\n            submitButtonName=\"Login\"\n            styleClass={classes}\n          />\n          {this.state.loginError ? (\n            <Typography\n              components=\"h1\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.loginError}\n            </Typography>\n          ) : null}\n          <Link className={classes.logInLink} to=\"/signup\">\n            Sign up!\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Login);\n","const styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 70px)\",\n    position: \"absolute\",\n    top: \"70px\",\n    left: \"0\",\n    width: \"300px\",\n    boxShadow: \"0px 0px 1px black\",\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  unreadMessage: {\n    backgroundColor: \"#3A4691\",\n    fontSize: \"15px\",\n    color: \"white\",\n    position: \"absolute\",\n    height: \"25px\",\n    width: \"25px\",\n    top: \"35px\",\n    right: \"10px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nfunction ChatOverview({\n  chat,\n  index,\n  classes,\n  email,\n  selectedChatIndex,\n  selectChatFn,\n}) {\n  return (\n    <React.Fragment>\n      <ListItem\n        className={classes.listItem}\n        onClick={() => selectChatFn(index)}\n        selected={selectedChatIndex === index}\n        alignItems=\"flex-start\"\n      >\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\">\n            {chat.users\n              .filter((user) => user !== email)[0]\n              .split(\"\")[0]\n              .toUpperCase()}\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={chat.users.filter((user) => user !== email)[0]}\n          secondary={\n            <React.Fragment>\n              {chat.messages.length ? (\n                <Typography component=\"span\" color=\"textPrimary\">\n                  {chat.messages[chat.messages.length - 1].message.length > 25\n                    ? chat.messages[chat.messages.length - 1].message.substring(\n                        0,\n                        25\n                      ) + \"...\"\n                    : chat.messages[chat.messages.length - 1].message}\n                </Typography>\n              ) : null}\n            </React.Fragment>\n          }\n        ></ListItemText>\n        {chat.messages.length ? (\n          !chat.receiverHasRead &&\n          chat.messages[chat.messages.length - 1].sender !== email ? (\n            <ListItemIcon>\n              <Avatar alt=\"Remy Sharp\" className={classes.unreadMessage}>\n                1\n              </Avatar>\n            </ListItemIcon>\n          ) : null\n        ) : null}\n      </ListItem>\n      <Divider></Divider>\n    </React.Fragment>\n  );\n}\n\nexport default ChatOverview;\n","import React, { Component } from \"react\";\nimport styles from \"../styles/inbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ChatOverview from \"./chatOverview\";\n\n\nclass Inbox extends Component {\n\n  render() {\n    const { classes, selectChatFn, dashboardState } = this.props;\n\n    const { selectedChatIndex, email, chats } = dashboardState;\n    return (\n      <main className={classes.root}>\n        <List>\n          {chats.map((chat, index) => (\n            <ChatOverview\n              key={index}\n              chat={chat}\n              index={index}\n              classes={classes}\n              email={email}\n              selectedChatIndex={selectedChatIndex}\n              selectChatFn={selectChatFn}\n            />\n          ))}\n        </List>\n        \n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Inbox);\n","const styles = (theme) => ({\n  signOutBtn: {\n    position: \"fixed\",\n    top: \"15px\",\n    marginLeft: \"250px\"\n  },\n  newChatBtn: {\n    position: \"absolute\",\n    bottom: \"40px\",\n    left: \"220px\",\n  },\n  header: {\n    width: \"301px\",\n    height: \"70px\",\n    backgroundColor: \"#344195\",\n    position: \"absolute\",\n    boxShadow: \"0px 0px 2px black\",\n  },\n  textHeader: {\n    position: \"fixed\",\n    marginTop: \"20px\",\n    marginLeft: \"10px\",\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    color: \"white\",\n    boxSizing: \"border-box\",\n  },\n});\n\nexport default styles;\n","const styles = (theme) => ({\n  content: {\n    height: \"calc(100vh - 100px)\",\n    overflow: \"auto\",\n    padding: \"25px\",\n    marginLeft: \"300px\",\n    boxSizing: \"border-box\",\n    overflowY: \"scroll\",\n    top: \"70px\",\n    paddingBottom: \"50px\",\n    width: \"calc(100% - 300px)\",\n    position: \"absolute\",\n  },\n\n  userSent: {\n    float: \"right\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#3A4691\",\n    color: \"white\",\n    minWidth: \"300px\",\n    maxWidth: \"500px\",\n    borderRadius: \"10px\",\n  },\n\n  friendSent: {\n    float: \"left\",\n    clear: \"both\",\n    padding: \"20px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    minWidth: \"300px\",\n    maxWidth: \"500px\",\n    borderRadius: \"10px\",\n  },\n\n  chatHeader: {\n    width: \"calc(100% - 301px)\",\n    height: \"70px\",\n    backgroundColor: \"#344195\",\n    position: \"fixed\",\n    marginLeft: \"301px\",\n    boxSizing: \"border-box\",\n  },\n\n  chatUser: {\n    backgroundColor: \"#344195\",\n    position: \"fixed\",\n    marginTop: \"25px\",\n    marginLeft: \"85px\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    color: \"white\",\n    boxSizing: \"border-box\",\n  },\n\n  avatar: {\n    marginTop: \"10px\",\n    marginLeft: \"25px\",\n    height: \"50px\",\n    width: \"50px\",\n  },\n\n  backBtn: {\n    position: \"fixed\",\n    height: \"70px\",\n    width: \"100px\",\n    right: \"0px\",\n  },\n\n  backIcon: {\n    color: \"white\",\n    height: \"35px\",\n    width: \"35px\",\n  },\n});\n\nexport default styles;\n","import React, { PureComponent } from \"react\";\nimport styles from \"../styles/chatView\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ChatView extends PureComponent {\n  componentDidUpdate = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) container.scrollTo(0, container.scrollHeight);\n  };\n\n  componentDidMount = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) container.scrollTo(0, container.scrollHeight);\n  };\n\n  getMessageClass = (senderEmail, email) => {\n    return senderEmail === email\n      ? this.props.classes.userSent\n      : this.props.classes.friendSent;\n  };\n\n  render() {\n    const { classes, backBtnClick, dashboardState } = this.props;\n    const { selectedChatIndex, email, chats } = dashboardState;\n\n    return selectedChatIndex !== null ? (\n      <div>\n        <div className={classes.chatHeader}>\n          <Button onClick={backBtnClick} size=\"large\" className={classes.backBtn}>\n            <ArrowBackRoundedIcon className={classes.backIcon} />\n          </Button>\n          <div className={classes.chatUser}>\n            {chats[selectedChatIndex].users.filter((user) => user !== email)[0]}\n          </div>\n          <Avatar className={classes.avatar} alt=\"Remy Sharp\">\n            {chats[selectedChatIndex].users\n              .filter((user) => user !== email)[0]\n              .split(\"\")[0]\n              .toUpperCase()}\n          </Avatar>\n        </div>\n        <main id=\"chatview-container\" className={classes.content}>\n          {chats[selectedChatIndex].messages.map((msg, index) => (\n            <div\n              key={index}\n              className={this.getMessageClass(msg.sender, email)}\n            >\n              {msg.message}\n            </div>\n          ))}\n        </main>\n      </div>\n    ) : null;\n  }\n}\n\nexport default withStyles(styles)(ChatView);\n","const styles = (theme) => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\",\n    },\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    left: \"315px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n    width: \"calc(100% - 300px - 50px)\",\n    height: \"50px\",\n    backgroundColor: \"#d3d4db\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n\n  chatTextBox: {\n    width: \"calc(100% - 40px)\",\n    height: \"20px\",\n    marginRight: \"10px\"\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"../styles/chatTextBox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nconst firebase = require(\"firebase\");\n\nclass ChatTextBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\",\n    };\n  }\n\n  userClickedInput = () => {};\n\n  buildDocKey = (email, friend) => {\n    return [email, friend].sort().join(\":\");\n  };\n\n  userTyping = (e) => {\n    e.keyCode === 13\n      ? this.submitMessage()\n      : this.setState({ chatText: e.target.value });\n  };\n\n  messageValid = (txt) => {\n    return txt && txt.replace(/\\s/g, \"\").length;\n  };\n\n  submitMessage = () => {\n    const { selectedChatIndex, email, chats } = this.props.dashboardState;\n    if (this.messageValid(this.state.chatText)) {\n      const friend = chats[selectedChatIndex].users.filter(\n        (user) => user !== email\n      )[0];\n      const docKey = this.buildDocKey(email, friend);\n      firebase\n        .firestore()\n        .collection(\"chats\")\n        .doc(docKey)\n        .update({\n          messages: firebase.firestore.FieldValue.arrayUnion({\n            sender: email,\n            message: this.state.chatText,\n            timeStamp: Date.now(),\n          }),\n          receiverHasRead: false,\n        });\n      document.getElementById(\"chattextbox\").value = \"\";\n    } else {\n      document.getElementById(\"chattextbox\").value = \"\";\n    }\n  };\n\n  render() {\n    const { classes, dashboardState } = this.props;\n    const { selectedChatIndex } = dashboardState;\n    return selectedChatIndex !== null ? (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          id=\"chattextbox\"\n          autoComplete=\"off\"\n          placeholder=\"Type your message ...\"\n          onKeyUp={(e) => this.userTyping(e)}\n          className={classes.chatTextBox}\n          onFocus={this.userClickedInput}\n        ></TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    ) : null;\n  }\n}\n\nexport default withStyles(styles)(ChatTextBox);\n","const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n    position: 'absolute',\n    width: '350px',\n    top: '50px',\n    left: 'calc(50% + 150px - 175px)'\n  },\n  input: {\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(),\n  },\n  submit: {\n    marginTop: theme.spacing(3)\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center'\n  }\n});\n\nexport default styles;","import React from \"react\";\nimport { Paper, withStyles, CssBaseline, Typography } from \"@material-ui/core\";\nimport styles from \"../styles/newChat\";\nimport UserForm from \"./common/userForm\";\nconst firebase = require(\"firebase\");\n\nclass NewChat extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      newChatrror: \"\",\n    };\n  }\n\n  handleOnSubmit = async (e) => {\n    e.preventDefault();\n    const userExists = await this.usersExists();\n    if (!userExists) {\n      this.setState({ newChatrror: \"Email does not exists\" });\n      return;\n    }\n    const chatExists = await this.chatExists();\n    chatExists ? this.goToChat() : await this.createChat();\n  };\n\n  createChat = async () => {\n    const docKey = this.buildDocKey();\n    await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .set({\n        receiverHasRead: false,\n        users: [firebase.auth().currentUser.email, this.state.email],\n        messages: [],\n      });\n    this.goToChat();\n  };\n\n  goToChat = () => {\n    const { chats } = this.props.dashboardState;\n    const chatIndex = chats.findIndex(\n      (chat) => chat.users.findIndex((user) => user === this.state.email) >= 0\n    );\n    this.props.selectChatClicked(chatIndex);\n  };\n\n  buildDocKey = () => {\n    return [firebase.auth().currentUser.email, this.state.email]\n      .sort()\n      .join(\":\");\n  };\n\n  chatExists = async () => {\n    const dockKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(dockKey)\n      .get();\n    return chat.exists;\n  };\n\n  usersExists = async () => {\n    if (firebase.auth().currentUser.email === this.state.email) {\n      this.setState({ newChatrror: \"Enter others Email\" });\n      return;\n    }\n    const userSnapshot = await firebase.firestore().collection(\"users\").get();\n    const exists = userSnapshot.docs\n      .map((doc) => doc.data().email)\n      .includes(this.state.email);\n    return exists;\n  };\n\n  handleOnChange = (type, e) => {\n    const val = e.target.value;\n    this.setState({ [type]: val, newChatrror: \"\" });\n  };\n\n  render() {\n    const formComponents = [\n      {\n        id: \"new-message-email-input\",\n        placeholder: \"Enter Friends Email\",\n        type: \"email\",\n        stateVal: \"email\",\n        autoFocus: true,\n      },\n    ];\n\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography components=\"h1\" variant=\"h5\">\n            New Chat\n          </Typography>\n          <UserForm\n            formComponensts={formComponents}\n            onChange={this.handleOnChange}\n            onSubmit={this.handleOnSubmit}\n            submitButtonName=\"Start Chat\"\n            styleClass={classes}\n          />\n          {this.state.newChatrror ? (\n            <Typography\n              components=\"h1\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.newChatrror}\n            </Typography>\n          ) : null}\n        </Paper>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(NewChat);\n","import React, { Component } from \"react\";\nimport Inbox from \"./inbox\";\nimport styles from \"../styles/dashboard\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport ChatView from \"./chatView\";\nimport ChatTextBox from \"./chatTextBox\";\nimport NewChat from \"./newChat\";\nconst firebase = require(\"firebase\");\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedChatIndex: null,\n      newChatFormVisible: true,\n      email: null,\n      chats: [],\n    };\n  }\n\n  getChats = async () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.props.history.push(\"/login\");\n        return;\n      }\n      firebase\n        .firestore()\n        .collection(\"chats\")\n        .where(\"users\", \"array-contains\", user.email)\n        .onSnapshot((res) => {\n          const chats = res.docs.map((doc) => doc.data());\n          this.setState({\n            email: user.email,\n            chats: chats,\n          });\n        });\n    });\n  };\n\n  componentDidMount() {\n    this.getChats();\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  signOut = () => firebase.auth().signOut();\n\n  newChatBtnClicked = () => {\n    this.setState({ newChatFormVisible: true, selectedChatIndex: null });\n  };\n\n  selectChatClicked = async (chatIndex) => {\n    const chat = this.state.chats[chatIndex];\n    const friend = chat.users.filter((user) => user !== this.state.email)[0];\n    const docKey = [this.state.email, friend].sort().join(\":\");\n    if (chat.messages.length) {\n      if (chat.messages[chat.messages.length - 1].sender !== this.state.email)\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .doc(docKey)\n          .update({ receiverHasRead: true });\n    }\n    this.setState({ newChatFormVisible: false, selectedChatIndex: chatIndex });\n  };\n\n  backBtnClick = () => {\n    this.setState({ newChatFormVisible: true, selectedChatIndex: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <div className={classes.header}>\n          <div className={classes.textHeader}>Chat App</div>\n          <Fab\n            size=\"small\"\n            className={classes.signOutBtn}\n            onClick={this.signOut}\n          >\n            <ExitToAppIcon />\n          </Fab>\n        </div>\n        <Inbox\n          history={this.props.history}\n          newChatBtnFn={this.newChatBtnClicked}\n          selectChatFn={this.selectChatClicked}\n          dashboardState={this.state}\n        />\n        {this.state.newChatFormVisible ? null : (\n          <ChatView\n            dashboardState={this.state}\n            backBtnClick={this.backBtnClick}\n          />\n        )}\n        <Fab\n          className={classes.newChatBtn}\n          onClick={this.newChatBtnClicked}\n          color=\"primary\"\n          aria-label=\"add\"\n        >\n          <AddIcon />\n        </Fab>\n        {this.state.newChatFormVisible ? (\n          <NewChat\n            dashboardState={this.state}\n            selectChatClicked={this.selectChatClicked}\n          />\n        ) : null}\n        {this.state.newChatFormVisible ? null : (\n          <ChatTextBox dashboardState={this.state} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Dashboard);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Signup from \"./components/signup\";\nimport Login from \"./components/login\";\nimport Dashboard from \"./components/dashboard\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { config } from \"./firebase-config\";\nimport \"./index.css\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\n\nconst routing = (\n  <Router>\n    <div id=\"routing-container\">\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Redirect from=\"/\" exact to=\"/login\" />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}